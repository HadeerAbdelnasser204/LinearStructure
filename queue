
#include <vector>
#include <iostream>

using namespace std;

template<class T>
class Queue {
private:
    int size;
    vector<T>Vqueue;
public:
    explicit Queue(int sz) {
        size = sz;
    }

    void enqueue(T element) {
        Vqueue.push_back(element);
    }

    T dequeue() {
        int ele = Vqueue.front();
        Vqueue.erase(Vqueue.begin());
        size--;
        return ele;
    }

    T first() {
        return Vqueue.front();
    }

    bool isEmpty() {
        return size == 0;
    }

    int queueSize() {
        return size;
    }

    void clear() {
        size = 0;
    }
    void print(){
        for (int i = 0; i < size ; ++i) {
            cout << Vqueue[i] << " ";

        }
        cout << endl;
    }
};
